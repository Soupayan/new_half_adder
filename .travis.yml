# language: rust
# rust:
#   - stable
#   - nightly
#   - beta

# jobs:
#   allow_failures:
#     - rust: nightly
#   fast_finish: true
# cache: cargo

# script:
#   - cargo build --verbose
#   - cargo test --verbose

# Common language header
language: rust
sudo: false
cache: cargo

# Channels and versions I want to build
rust:
  - stable
  - beta
  - 1.34.0
  - nightly

# Operating systems I want to test
os:
  - linux
  - osx
  - windows

# Set global environment only
env:
  global:
    - RUST_BACKTRACE=1
    # - CRATES=fin_model,fin_data,fin_iex

jobs:
  # Performance tweak
  fast_finish: true
  # Ignore failures in nightly, not ideal, but necessary
  allow_failures:
    - rust: nightly

  # Only run the formatting check for stable
  include:
    - name: 'Rust: format check'
      rust: stable
      install:
        - rustup component add rustfmt
      script:
        - cargo fmt --verbose --all -- --check

      # Only run the style check for stable, if enabled
    - name: 'Rust: style check'
      if: env(ENABLE_CLIPPY) = 1
      rust: stable
      install:
        - rustup component add clippy
      script:
        - cargo clippy --verbose --all -- -D warnings

      # Only run code coverage for stable
    # - name: 'Rust: code coverage'
    #   rust: stable
    #   os: linux
    #   script:
    #     - cargo tarpaulin --verbose --ciserver travis-ci --coveralls $TRAVIS_JOB_ID

# Custom script
# * adding '--all' for workspaces on build/test
# * adding '--package' for workspaces on doc
script:
  - cargo build --verbose
  - cargo test  --verbose
  # - |
  #   for CRATE in ${CRATES//,/ }
  #   do
  #       cargo doc   --verbose --package $CRATE --no-deps
  #   done

# # Cargo/Crates integration
# deploy:
#   provider: cargo
#   token:
#     secure: GlZuK.....ZND5s=
#   on:
#     tags: true
#     branch: master
#     condition: "$TRAVIS_RUST_VERSION = stable && $TRAVIS_OS_NAME = linux"

# Only initiate build on mainline branches
branches:
  only: main

# Suppress at least some emails
notifications:
  email:
    on_success: never
